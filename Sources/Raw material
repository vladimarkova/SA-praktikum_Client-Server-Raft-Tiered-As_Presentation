------------
Проектиране на клиент-сървър и рафт(Tiered) архитектури

Понятие за софтуерна архитектура(software architecture) 
-съвкупност от важни решения за организацията на софтурните системи, включваща проектиране, анализиране и документиране на системни структури от високо ниво 
-Чрез софтуерната архитектура се вземат структурни решения, които са скъпи за промяна след реализация
-Архитектурата на софтуера е метафора, аналогично на архитектурата на сгради и съоръжения

-Предмет на СА е поведението и връзките между различни елементи, разглеждани като “черни кутии”
-Съгласно Software Engineering Institute: “Архитектура на дадена софтуерна система е съвкупност от структури, показващи различните софтуерни елементи на системата, външно видимите им свойства и връзките между тях”
  
------

•Организационна архитектура (Enterprise architecture)
•Основните процеси, технологичните и бизнес-стратегии в дадена организация

•Системна архитектура (System architecture)
•Организацията на програмите и инфраструктурата, върху която те се изпълняват

•Архитектура на приложението (Application architecture)
•Организация на приложение, подсистема или компонент

------
Проектирането(процес на определяне на подсистемите, които съставляват системата и рамката на управление и комуникация) на СА - цикличен и инкрементален процес
Архитектурните драйвери - най-важните изисквания, които имат общо към създаването на СА. Трябва да ги намерим в началото на проекта, после ще станат по-трудни за промяна с реализацията на проекта, оттам и изменяемост и гъвкавост

Функционлани и нефункционални изисквания
•Технически ограничения (Technical Constraints)
•Ограничения, наложениот бизнеса (Business Constraints)
•Качествениатрибути(Quality Attributes) 

Stakeholders - Заинтересовани лица

Същественото тук е, че успешен проект и разработка могат да се изградят само ако е налице идейна цялост и се следва определен архитектурен стил

------
Архитектурни структури

-Структура –съвкупност от софтуерни елементи, техните външно видими свойства и връзките между тях
-Изглед (view)–конкретно документирано представяне на дадена структура
-Три групи 
–Модулни структури;–Структури на процесите;–Структури на разположението

---
Елементите в модулните структури са модули –единици работа за изпълнение. Модулите предлагат поглед, ориентиран към реализацията на 
системата, без значение какво става по време на изпълнението

-
Декомпозиция на модулите –връзките между модулите са от вида “X е под-модул на Y”; 
Употреба на модулите –връзките между модулите са от вида “X използва Y”
•Като частен случай на структурата на употребата на модули е структурата на слоевете –когато върху употребата са наложени стриктни правила се обособяват слоеве;
•Модулите от слой номер N могат да се възползват само от услугите намодулите от слой номер N-1;
Йерархия на класовете –в терминологията на ООП, модулите се наричат “класове”, а в настоящата структура връзките между класовете са от вида “класът Xнаследява класа Y”и “обекта Xе инстанцияна клас Y”

---
Елементите са компоненти, които се проявяват по време на изпълнението (т.е. основните изчислителни процеси) и средствата за комуникация между процесите
Структура на процесите – елементите са процеси (или нишки), изпълнявани в системата (компоненти) и комуникационни, синхронизационни или блокиращи операции между тях (конектори); Връзките между тях (attachments) показват как компонентите и конекторите се отнасят помежду си;
Структура на потока на данните - показва реда на изпълнение на процесите, както и тяхната организация 

---
Структурите на разположението показват връзката между софтуерните елементи и елементите на околната среда, в която се намира системата по време на разработката или по време на изпълнението
Структура на внедряването –показва как софтуерът се разполага върху хардуера и комуникационното оборудване
Файлова структура –показва кой модул къде се помещава, по време на различните фази на реализация
Разпределение на работата –показва кой модул от кой екип се реализира

------
4 + 1 модел на софтуерната архитектура
1. Логически изглед
2. Изглед на процесите
3. Изглед на кода
4. Физически изглед

+1) - Случаите на употреба(Use cases) 


---------
Източници:
[1]доц. Бончев, Б., доц. Димов, А., Лекции по "Софтуерни архитектури", зимен семестър, 2020/2021 


